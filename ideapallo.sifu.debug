ideapallo project[
    url www.ideapallo.com
    namespace com.ideapallo](
    ideapallo server[
        template java-springboot
        developer(
            akis
            docker
        )
        default model type mysql
        security(
            principal Account
            role AccountTypes
            defaultRole CLIENT
            adminRole ADMIN
            signIn[
                query findUserWithStuff
                response(
                    Account.id
                    Account.username
                    Account.role
                    Account.email
                )]
            type(
                email
                facebook
            )
        )
        path /
        mail support@www.ideapallo.com](
        AccountTypes enum(
            ADMIN ADMIN
            CLIENT CLIENT
        )
        Tag model[
            type mysql](
            id integer[
                primarykey
                max 9223372036854775807]
            name text[
                max 255]
            findIdeaByTag find from Idea as Idea left join Tag as Tag on Idea with Idea.tags where Tag.name == name
            findAll find from Tag as Tag
            countAll count from Tag as Tag
            findById find from Tag as Tag where Tag.id == id
            getById get from Tag as Tag where Tag.id == id
            deleteById delete from Tag as Tag where Tag.id == id
            findByName find from Tag as Tag where Tag.name == name
            tags find from Tag as Tag
        )
        Account model[
            type mysql
            unique(
                email
            )
            unique(
                emailVerificationCode
            )
            unique(
                resetPasswordCode
            )
            unique(
                facebookId
            )](
            id integer[
                primarykey
                max 9223372036854775807]
            findUserWithStuff find from Account as Account join Idealist as Idealist on Account with Idealist.account where Account.id == id
            username optional text[
                min 4
                max 40]
            role AccountTypes
            email optional text[
                unique
                min 6
                max 128
                regex "^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$"]
            passwordHash optional text[
                min 6
                max 128
                sensitive]
            emailVerificationCode optional text[
                unique
                min 64
                max 64
                sensitive]
            emailVerificationCodeTimestamp optional datetime
            emailVerified optional boolean[
                default false]
            resetPasswordCode optional text[
                unique
                min 64
                max 64
                sensitive]
            resetPasswordCodeTimestamp optional datetime
            facebookId optional text[
                unique
                min 6
                max 255]
            findAll find from Account as Account
            countAll count from Account as Account
            findById find from Account as Account where Account.id == id
            getById get from Account as Account where Account.id == id
            deleteById delete from Account as Account where Account.id == id
            findByUsername find from Account as Account where Account.username == username
            findByUsernameMandatory find from Account as Account where mandatory Account.username == username
            findByRole find from Account as Account where Account.role == role
            findByEmail find from Account as Account where Account.email == email
            findByEmailMandatory find from Account as Account where mandatory Account.email == email
            findByPasswordHash find from Account as Account where Account.passwordHash == passwordHash
            findByPasswordHashMandatory find from Account as Account where mandatory Account.passwordHash == passwordHash
            findByEmailVerificationCode find from Account as Account where Account.emailVerificationCode == emailVerificationCode
            findByEmailVerificationCodeMandatory find from Account as Account where mandatory Account.emailVerificationCode == emailVerificationCode
            findByEmailVerificationCodeTimestamp find from Account as Account where Account.emailVerificationCodeTimestamp == emailVerificationCodeTimestamp
            findByEmailVerificationCodeTimestampMandatory find from Account as Account where mandatory Account.emailVerificationCodeTimestamp == emailVerificationCodeTimestamp
            findByEmailVerified find from Account as Account where Account.emailVerified == emailVerified
            findByEmailVerifiedMandatory find from Account as Account where mandatory Account.emailVerified == emailVerified
            findByResetPasswordCode find from Account as Account where Account.resetPasswordCode == resetPasswordCode
            findByResetPasswordCodeMandatory find from Account as Account where mandatory Account.resetPasswordCode == resetPasswordCode
            findByResetPasswordCodeTimestamp find from Account as Account where Account.resetPasswordCodeTimestamp == resetPasswordCodeTimestamp
            findByResetPasswordCodeTimestampMandatory find from Account as Account where mandatory Account.resetPasswordCodeTimestamp == resetPasswordCodeTimestamp
            findByFacebookId find from Account as Account where Account.facebookId == facebookId
            findByFacebookIdMandatory find from Account as Account where mandatory Account.facebookId == facebookId
        )
        Idealist model[
            type mysql](
            id integer[
                primarykey
                max 9223372036854775807]
            account Account[
                oneToOne]
            findAll find from Idealist as Idealist
            countAll count from Idealist as Idealist
            findById find from Idealist as Idealist where Idealist.id == id
            getById get from Idealist as Idealist where Idealist.id == id
            deleteById delete from Idealist as Idealist where Idealist.id == id
            findByAccount find from Idealist as Idealist where Idealist.account.id == accountId
        )
        Idea model[
            type mysql](
            id integer[
                primarykey
                max 9223372036854775807]
            title text[
                max 255]
            content text[
                max 255]
            idealist list Idealist[
                manyToMany IdeaIdealist]
            tags list Tag[
                manyToMany IdeaTag]
            byId find from Idea as Idea where Idea.id == id
            findByIdealist find from Idea as Idea join Idealist as Idealist on Idea with Idea.idealist
            findAll find from Idea as Idea
            countAll count from Idea as Idea
            findById find from Idea as Idea where Idea.id == id
            getById get from Idea as Idea where Idea.id == id
            deleteById delete from Idea as Idea where Idea.id == id
            findByTitle find from Idea as Idea where Idea.title == title
            findByContent find from Idea as Idea where Idea.content == content
            ideas find from Idea as Idea
        )
        AddIdealistToAccountApi api[
            secured(
                CLIENT
                ADMIN
            )](
            create create[
                model Account
                post /create
                response(
                    Account.id
                    Account.username
                    Account.role
                    Account.email
                    Account.passwordHash
                    Account.emailVerificationCode
                    Account.emailVerificationCodeTimestamp
                    Account.emailVerified
                    Account.resetPasswordCode
                    Account.resetPasswordCodeTimestamp
                    Account.facebookId
                )
                query Account.findById
                secured(
                    CLIENT
                    ADMIN
                )
                errors
                request CreateRequest
                response CreateResponse](
                id id[
                    visible(
                        read
                    )]
                username username[
                    visible(
                        read
                        create
                    )]
                role role[
                    visible(
                        read
                        create
                    )]
                email email[
                    visible(
                        read
                        create
                    )]
                passwordHash passwordHash[
                    visible(
                        read
                        create
                    )]
                emailVerificationCode emailVerificationCode[
                    visible(
                        read
                        create
                    )]
                emailVerificationCodeTimestamp emailVerificationCodeTimestamp[
                    visible(
                        read
                        create
                    )]
                emailVerified emailVerified[
                    visible(
                        read
                        create
                    )]
                resetPasswordCode resetPasswordCode[
                    visible(
                        read
                        create
                    )]
                resetPasswordCodeTimestamp resetPasswordCodeTimestamp[
                    visible(
                        read
                        create
                    )]
                facebookId facebookId[
                    visible(
                        read
                        create
                    )]
            )
            CreateRequest dto(
                username optional text[
                    min 4
                    max 40]
                role AccountTypes
                email optional text[
                    min 6
                    max 128
                    regex "^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$"]
                passwordHash optional text[
                    min 6
                    max 128
                    sensitive]
                emailVerificationCode optional text[
                    min 64
                    max 64
                    sensitive]
                emailVerificationCodeTimestamp optional datetime
                emailVerified optional boolean
                resetPasswordCode optional text[
                    min 64
                    max 64
                    sensitive]
                resetPasswordCodeTimestamp optional datetime
                facebookId optional text[
                    min 6
                    max 255]
            )
            CreateResponse dto(
                id integer[
                    max 9223372036854775807]
                username optional text[
                    min 4
                    max 40]
                role AccountTypes
                email optional text[
                    min 6
                    max 128
                    regex "^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$"]
                passwordHash optional text[
                    min 6
                    max 128
                    sensitive]
                emailVerificationCode optional text[
                    min 64
                    max 64
                    sensitive]
                emailVerificationCodeTimestamp optional datetime
                emailVerified optional boolean
                resetPasswordCode optional text[
                    min 64
                    max 64
                    sensitive]
                resetPasswordCodeTimestamp optional datetime
                facebookId optional text[
                    min 6
                    max 255]
            )
        )
        TagApi api(
            tags find[
                query Tag.tags
                get /tags
                errors
                response(
                    Tag.id
                    Tag.name
                )
                response list TagsResponse]
            TagsResponse dto(
                id integer[
                    max 9223372036854775807]
                name text[
                    max 255]
            )
        )
        IdeaApi api[
            secured(
                CLIENT
                ADMIN
            )](
            readIdea find[
                secured(
                    CLIENT
                    ADMIN
                )
                get /idea/:id
                query Idea.findById
                response(
                    Idea.id
                    Idea.title
                    Idea.content
                )
                errors
                request ReadIdeaRequest
                response ReadIdeaResponse]
            ReadIdeaRequest dto(
                id integer[
                    max 9223372036854775807]
            )
            ReadIdeaResponse dto(
                id integer[
                    max 9223372036854775807]
                title text[
                    max 255]
                content text[
                    max 255]
            )
            createIdea create[
                secured(
                    CLIENT
                    ADMIN
                )
                post /idea
                model Idea
                query Idea.findById
                response(
                    Idea.id
                    Idea.title
                    Idea.content
                )
                errors
                request CreateIdeaRequest
                response CreateIdeaResponse](
                id id[
                    visible(
                        read
                    )]
                title title[
                    visible(
                        create
                        read
                    )]
                content content[
                    visible(
                        create
                        read
                    )]
                tags optional list text[
                    visible(
                        create
                        read
                    )]
            )
            CreateIdeaRequest dto(
                title text[
                    max 255]
                content text[
                    max 255]
            )
            CreateIdeaResponse dto(
                id integer[
                    max 9223372036854775807]
                title text[
                    max 255]
                content text[
                    max 255]
            )
            updateIdea update[
                secured(
                    CLIENT
                    ADMIN
                )
                put /idea/:id
                model Idea
                query Idea.findById
                response(
                    Idea.id
                    Idea.title
                    Idea.content
                )
                errors
                request UpdateIdeaRequest
                response UpdateIdeaResponse](
                id id[
                    visible(
                        read
                        update
                    )]
                title title[
                    visible(
                        read
                        update
                    )]
                content content[
                    visible(
                        read
                        update
                    )]
                tags optional list text[
                    visible(
                        read
                        update
                    )]
            )
            UpdateIdeaRequest dto(
                id integer[
                    max 9223372036854775807]
                title text[
                    max 255]
                content text[
                    max 255]
            )
            UpdateIdeaResponse dto(
                id integer[
                    max 9223372036854775807]
                title text[
                    max 255]
                content text[
                    max 255]
            )
            deleteIdea delete[
                secured(
                    CLIENT
                    ADMIN
                )
                delete /idea/:id
                query Idea.findById
                errors
                request DeleteIdeaRequest]
            DeleteIdeaRequest dto(
                id integer[
                    max 9223372036854775807]
            )
            tag find[
                query Tag.findIdeaByTag
                get /tag
                secured(
                    CLIENT
                    ADMIN
                )
                errors
                request TagRequest
                response(
                    Idea.id
                    Idea.title
                    Idea.content
                    Idea.idealist.id
                    Idea.tags.id
                    Tag.name
                )
                response list TagResponse]
            TagRequest dto(
                name text[
                    max 255]
            )
            TagResponse dto(
                id integer[
                    max 9223372036854775807]
                title text[
                    max 255]
                content text[
                    max 255]
                idealistId list integer[
                    max 9223372036854775807]
                tagsId list integer[
                    max 9223372036854775807]
                tagName optional text[
                    max 255]
            )
            ideas find[
                query Idea.ideas
                get /ideas
                secured(
                    CLIENT
                    ADMIN
                )
                errors
                response(
                    Idea.id
                    Idea.title
                    Idea.content
                    Idea.idealist.id
                    Idea.tags.id
                )
                response list IdeasResponse]
            IdeasResponse dto(
                id integer[
                    max 9223372036854775807]
                title text[
                    max 255]
                content text[
                    max 255]
                idealistId list integer[
                    max 9223372036854775807]
                tagsId list integer[
                    max 9223372036854775807]
            )
            findById find[
                query Idea.findById
                get /find-by-id
                secured(
                    CLIENT
                    ADMIN
                )
                errors
                request FindByIdRequest
                response(
                    Idea.id
                    Idea.title
                    Idea.content
                    Idea.idealist.id
                    Idea.tags.id
                )
                response FindByIdResponse]
            FindByIdRequest dto(
                id integer[
                    max 9223372036854775807]
            )
            FindByIdResponse dto(
                id integer[
                    max 9223372036854775807]
                title text[
                    max 255]
                content text[
                    max 255]
                idealistId list integer[
                    max 9223372036854775807]
                tagsId list integer[
                    max 9223372036854775807]
            )
        )
        CREDENTIALS_ARE_INVALID unauthorized
        ACCESS_TOKEN_IS_EXPIRED unauthorized
        USER_ALREADY_EXIST dataConstraint
        INSUFFICIENT_RIGHTS unauthorized
        EMAIL_NOT_VERIFIED unauthorized
        EMAIL_VERIFICATION_CODE_EXPIRED badRequest
        EMAIL_RESET_PASSWORD_CODE_EXPIRED badRequest
        IdeaIdealist model[
            type mysql
            unique(
                idea
                idealist
            )](
            id integer[
                primarykey
                max 9223372036854775807]
            idea Idea[
                manyToOne]
            idealist Idealist[
                manyToOne]
            findAll find from IdeaIdealist as IdeaIdealist
            countAll count from IdeaIdealist as IdeaIdealist
            findById find from IdeaIdealist as IdeaIdealist where IdeaIdealist.id == id
            getById get from IdeaIdealist as IdeaIdealist where IdeaIdealist.id == id
            deleteById delete from IdeaIdealist as IdeaIdealist where IdeaIdealist.id == id
            findByIdea find from IdeaIdealist as IdeaIdealist where IdeaIdealist.idea.id == ideaId
            findByIdealist find from IdeaIdealist as IdeaIdealist where IdeaIdealist.idealist.id == idealistId
            findByIdeaIdAndIdealistId find from IdeaIdealist as IdeaIdealist where IdeaIdealist.idea.id == ideaId and IdeaIdealist.idealist.id == idealistId
        )
        IdeaTag model[
            type mysql
            unique(
                idea
                tag
            )](
            id integer[
                primarykey
                max 9223372036854775807]
            idea Idea[
                manyToOne]
            tag Tag[
                manyToOne]
            findAll find from IdeaTag as IdeaTag
            countAll count from IdeaTag as IdeaTag
            findById find from IdeaTag as IdeaTag where IdeaTag.id == id
            getById get from IdeaTag as IdeaTag where IdeaTag.id == id
            deleteById delete from IdeaTag as IdeaTag where IdeaTag.id == id
            findByIdea find from IdeaTag as IdeaTag where IdeaTag.idea.id == ideaId
            findByTag find from IdeaTag as IdeaTag where IdeaTag.tag.id == tagId
            findByIdeaIdAndTagId find from IdeaTag as IdeaTag where IdeaTag.idea.id == ideaId and IdeaTag.tag.id == tagId
        )
        AuthenticationApi api(
            emailSignUp emailsignup[
                post /email-sign-up
                query Account.findUserWithStuff
                response(
                    Account.id
                    Account.username
                    Account.role
                    Account.email
                )
                errors
                request EmailSignUpRequest
                response list EmailSignUpResponse](
                email mandatory email
                password text[
                    min 6
                    max 32
                    regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                    sensitive]
            )
            EmailSignUpRequest dto(
                email text[
                    min 6
                    max 128
                    regex "^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$"]
                password text[
                    min 6
                    max 32
                    regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                    sensitive]
            )
            EmailSignUpResponse dto(
                id integer[
                    max 9223372036854775807]
                username optional text[
                    min 4
                    max 40]
                role AccountTypes
                email optional text[
                    min 6
                    max 128
                    regex "^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$"]
            )
            emailSignIn emailsignin[
                request EmailSignInRequest
                post /email-sign-in
                query Account.findUserWithStuff
                response(
                    Account.id
                    Account.username
                    Account.role
                    Account.email
                )
                errors
                response EmailSignInResponse]
            EmailSignInRequest dto(
                email text[
                    min 6
                    max 128
                    regex "^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$"]
                password text[
                    min 6
                    max 32
                    regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                    sensitive]
            )
            EmailSignInResponse dto(
                accessToken text[
                    min 64
                    max 64
                    sensitive]
                id integer[
                    max 9223372036854775807]
                username optional text[
                    min 4
                    max 40]
                role AccountTypes
                email optional text[
                    min 6
                    max 128
                    regex "^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$"]
            )
            forgotPassword forgotpassword[
                request ForgotPasswordRequest
                post /forgot-password
                errors]
            ForgotPasswordRequest dto(
                email text[
                    min 6
                    max 128
                    regex "^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$"]
            )
            resetPassword resetpassword[
                request ResetPasswordRequest
                post /reset-password
                errors]
            ResetPasswordRequest dto(
                resetPasswordCode text[
                    min 64
                    max 64
                    sensitive]
                newPassword text[
                    min 6
                    max 32
                    regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                    sensitive]
            )
            verifyEmail verifyemail[
                request VerifyEmailRequest
                post /verify-email
                query Account.findUserWithStuff
                response(
                    Account.id
                    Account.username
                    Account.role
                    Account.email
                )
                errors
                response list VerifyEmailResponse]
            VerifyEmailRequest dto(
                emailVerificationCode text[
                    min 64
                    max 64
                    sensitive]
            )
            VerifyEmailResponse dto(
                id integer[
                    max 9223372036854775807]
                username optional text[
                    min 4
                    max 40]
                role AccountTypes
                email optional text[
                    min 6
                    max 128
                    regex "^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$"]
            )
            changePassword changepassword[
                request ChangePasswordRequest
                secured
                post /change-password
                query Account.findUserWithStuff
                response(
                    Account.id
                    Account.username
                    Account.role
                    Account.email
                )
                errors
                response list ChangePasswordResponse]
            ChangePasswordRequest dto(
                oldPassword text[
                    min 6
                    max 32
                    regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                    sensitive]
                newPassword text[
                    min 6
                    max 32
                    regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                    sensitive]
            )
            ChangePasswordResponse dto(
                id integer[
                    max 9223372036854775807]
                username optional text[
                    min 4
                    max 40]
                role AccountTypes
                email optional text[
                    min 6
                    max 128
                    regex "^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$"]
            )
            facebookSignIn facebooksignin[
                request FacebookSignInRequest
                post /facebook-sign-in
                query Account.findUserWithStuff
                response(
                    Account.id
                    Account.username
                    Account.role
                    Account.email
                )
                errors
                response FacebookSignInResponse]
            FacebookSignInRequest dto(
                facebookAccessToken text[
                    min 6
                    max 255]
            )
            FacebookSignInResponse dto(
                accessToken text[
                    min 64
                    max 64
                    sensitive]
                id integer[
                    max 9223372036854775807]
                username optional text[
                    min 4
                    max 40]
                role AccountTypes
                email optional text[
                    min 6
                    max 128
                    regex "^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$"]
            )
        )
    )
    webApp client[
        template js-angular
        connectedTo(
            ideapallo.AddIdealistToAccountApi.create
            ideapallo.TagApi.tags
            ideapallo.IdeaApi.readIdea
            ideapallo.IdeaApi.createIdea
            ideapallo.IdeaApi.updateIdea
            ideapallo.IdeaApi.deleteIdea
            ideapallo.IdeaApi.tag
            ideapallo.IdeaApi.ideas
            ideapallo.IdeaApi.findById
            ideapallo.AuthenticationApi.emailSignUp
            ideapallo.AuthenticationApi.emailSignIn
            ideapallo.AuthenticationApi.forgotPassword
            ideapallo.AuthenticationApi.resetPassword
            ideapallo.AuthenticationApi.verifyEmail
            ideapallo.AuthenticationApi.changePassword
            ideapallo.AuthenticationApi.facebookSignIn
        )
        path /home
        home homePage
        i18n(
            en
        )
        loggedin ideasPage](
        homePage page[
            path /home](
            seeIdeas link{
                on click(
                    goto ideasPage
                )}
        )
        IdeaUpdated event
        ViewTags event(
            name text
        )
        ViewIdea event(
            id integer
        )
        ideasPage page[
            path /ideas
            secured(
                ADMIN
                CLIENT
            )](
            addNote button{
                on click(
                    open createNewIdea
                )}
            ideas ideas
            idea idea[
                hidden]
        )
        createNewIdea form[
            submit IdeaApi.createIdea
            model[
                dto ideapallo.IdeaApi.CreateIdeaRequest](
                title text[
                    max 255]
                content text[
                    max 255]
            )
            visible(
                title
                content
            )](
            title text[
                bind(
                    model . title
                )
                max 255]
            content text[
                bind(
                    model . content
                )
                max 255]
            submit button
        ){
            on success(
                close
                fire IdeaUpdated
            )}
        ideaPage page[
            path /idea/:id
            params(
                id text
            )]
        findByTags page[
            path /tags
            secured(
                ADMIN
                CLIENT
            )](
            findByTag findByTag
            tags tags
        )
        signInPage page[
            path /sign-in](
            emailSignInForm emailSignInForm
            facebookSignInForm facebookSignInForm
            forgotPassword link{
                on click(
                    goto forgotPasswordPage
                )}
            signUp link{
                on click(
                    goto signUpPage
                )}
        )
        signUpPage page[
            path /sign-up](
            emailSignUpForm emailSignUpForm
            signIn link{
                on click(
                    goto signInPage
                )}
        )
        verifyEmailPage page[
            path /verify-email/:emailVerificationCode
            params(
                emailVerificationCode text[
                    min 64
                    max 64]
            )](
            verifyEmailForm verifyEmailForm[
                bind(
                    params . emailVerificationCode
                )]
        )
        forgotPasswordPage page[
            path /forgot-password](
            forgotPasswordForm forgotPasswordForm
        )
        resetPasswordPage page[
            path /reset-password/:resetPasswordCode
            params(
                resetPasswordCode text[
                    min 64
                    max 64]
            )](
            resetPasswordForm resetPasswordForm[
                bind(
                    params . resetPasswordCode
                )]
        )
        UserSignedIn event[
            dto ideapallo.AuthenticationApi.EmailSignInResponse](
            accessToken text[
                min 64
                max 64
                sensitive]
            id integer[
                max 9223372036854775807]
            username optional text[
                min 4
                max 40]
            role ideapallo.AccountTypes
            email optional text[
                min 6
                max 128
                regex "^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$"]
        )
        changePasswordForm form[
            submit ideapallo.AuthenticationApi.changePassword
            model[
                dto ideapallo.AuthenticationApi.ChangePasswordRequest](
                oldPassword text[
                    min 6
                    max 32
                    regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                    sensitive]
                newPassword text[
                    min 6
                    max 32
                    regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                    sensitive]
            )
            visible(
                oldPassword
                newPassword
            )](
            oldPassword text[
                bind(
                    model . oldPassword
                )
                min 6
                max 32
                regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                sensitive]
            newPassword text[
                bind(
                    model . newPassword
                )
                min 6
                max 32
                regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                sensitive]
            submit button
        ){
            on success(
                goto signInPage
            )}
        ideas table[
            load IdeaApi.ideas
            model[
                dto ideapallo.IdeaApi.IdeasResponse](
                id integer[
                    max 9223372036854775807]
                title text[
                    max 255]
                content text[
                    max 255]
                idealistId list integer[
                    max 9223372036854775807]
                tagsId list integer[
                    max 9223372036854775807]
            )
            visible(
                id
                title
                content
                idealistId
                tagsId
            )](
            id integer[
                bind(
                    model . id
                )
                max 9223372036854775807]
            title text[
                bind(
                    model . title
                )
                max 255]
            content text[
                bind(
                    model . content
                )
                max 255]
            idealistId list integer[
                bind(
                    model . idealistId
                )
                max 9223372036854775807]
            tagsId list integer[
                bind(
                    model . tagsId
                )
                max 9223372036854775807]
            viewIdea link{
                on click(
                    fire ViewIdea(
                        item . id
                    )
                )}
        ){
            on IdeaUpdated(
                reload
            )}
        idea table[
            load IdeaApi.findById
            params[
                dto ideapallo.IdeaApi.FindByIdRequest](
                id integer[
                    max 9223372036854775807]
            )
            model[
                dto ideapallo.IdeaApi.FindByIdResponse](
                id integer[
                    max 9223372036854775807]
                title text[
                    max 255]
                content text[
                    max 255]
                idealistId list integer[
                    max 9223372036854775807]
                tagsId list integer[
                    max 9223372036854775807]
            )
            visible(
                id
                title
                content
                idealistId
                tagsId
            )](
            id integer[
                bind(
                    model . id
                )
                max 9223372036854775807]
            title text[
                bind(
                    model . title
                )
                max 255]
            content text[
                bind(
                    model . content
                )
                max 255]
            idealistId list integer[
                bind(
                    model . idealistId
                )
                max 9223372036854775807]
            tagsId list integer[
                bind(
                    model . tagsId
                )
                max 9223372036854775807]
        ){
            on ViewIdea(
                show
                reload(
                    event . id
                )
            )}
        findByTag form
        tags table[
            load TagApi.tags
            model[
                dto ideapallo.TagApi.TagsResponse](
                id integer[
                    max 9223372036854775807]
                name text[
                    max 255]
            )
            visible(
                id
                name
            )](
            id integer[
                bind(
                    model . id
                )
                max 9223372036854775807]
            name text[
                bind(
                    model . name
                )
                max 255]
            viewTags link{
                on click(
                    fire ViewTags(
                        item . name
                    )
                )}
        )
        emailSignInForm form[
            submit ideapallo.AuthenticationApi.emailSignIn
            model[
                dto ideapallo.AuthenticationApi.EmailSignInRequest](
                email text[
                    min 6
                    max 128
                    regex "^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$"]
                password text[
                    min 6
                    max 32
                    regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                    sensitive]
            )
            visible(
                email
                password
            )](
            email text[
                bind(
                    model . email
                )
                min 6
                max 128
                regex "^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$"]
            password text[
                bind(
                    model . password
                )
                min 6
                max 32
                regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                sensitive]
            submit button
        ){
            on success(
                fire UserSignedIn(
                    success . accessToken
                    success . id
                    success . username
                    success . role
                    success . email
                )
                goto ideasPage
            )}
        facebookSignInForm form[
            submit ideapallo.AuthenticationApi.facebookSignIn
            model[
                dto ideapallo.AuthenticationApi.FacebookSignInRequest](
                facebookAccessToken text[
                    min 6
                    max 255]
            )
            visible(
                facebookAccessToken
            )](
            facebookAccessToken text[
                bind(
                    model . facebookAccessToken
                )
                min 6
                max 255]
            facebookSignInButton
        ){
            on success(
                fire UserSignedIn(
                    success . accessToken
                    success . id
                    success . username
                    success . role
                    success . email
                )
                goto ideasPage
            )}
        emailSignUpForm form[
            submit ideapallo.AuthenticationApi.emailSignUp
            model[
                dto ideapallo.AuthenticationApi.EmailSignUpRequest](
                email text[
                    min 6
                    max 128
                    regex "^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$"]
                password text[
                    min 6
                    max 32
                    regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                    sensitive]
            )
            visible(
                email
                password
            )](
            email text[
                bind(
                    model . email
                )
                min 6
                max 128
                regex "^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$"]
            password text[
                bind(
                    model . password
                )
                min 6
                max 32
                regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                sensitive]
            submit button
        ){
            on success(
                goto signInPage
            )}
        verifyEmailForm form[
            submit ideapallo.AuthenticationApi.verifyEmail
            params(
                emailVerificationCode text[
                    min 64
                    max 64]
            )
            model[
                dto ideapallo.AuthenticationApi.VerifyEmailRequest](
                emailVerificationCode text[
                    min 64
                    max 64
                    sensitive]
            )
            visible(
                emailVerificationCode
            )](
            emailVerificationCode text[
                bind(
                    model . emailVerificationCode
                )
                min 64
                max 64
                sensitive]
            submit button
        ){
            on success(
                goto signInPage
            )}
        forgotPasswordForm form[
            submit ideapallo.AuthenticationApi.forgotPassword
            model[
                dto ideapallo.AuthenticationApi.ForgotPasswordRequest](
                email text[
                    min 6
                    max 128
                    regex "^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$"]
            )
            visible(
                email
            )](
            email text[
                bind(
                    model . email
                )
                min 6
                max 128
                regex "^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$"]
            submit button
        ){
            on success(
                goto signInPage
            )}
        resetPasswordForm form[
            submit ideapallo.AuthenticationApi.resetPassword
            params(
                resetPasswordCode text[
                    min 64
                    max 64]
            )
            model[
                dto ideapallo.AuthenticationApi.ResetPasswordRequest](
                resetPasswordCode text[
                    min 64
                    max 64
                    sensitive]
                newPassword text[
                    min 6
                    max 32
                    regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                    sensitive]
            )
            visible(
                resetPasswordCode
                newPassword
            )](
            resetPasswordCode text[
                bind(
                    model . resetPasswordCode
                )
                min 64
                max 64
                sensitive]
            newPassword text[
                bind(
                    model . newPassword
                )
                min 6
                max 32
                regex "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$"
                sensitive]
            submit button
        ){
            on success(
                goto signInPage
            )}
    )
)